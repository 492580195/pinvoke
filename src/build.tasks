<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="PInvokesExports" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <LibName ParameterType="System.String" />
      <ExportPath ParameterType="System.String" />
      <AssemblyPath ParameterType="System.String" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text" />
      <Using Namespace="System.Reflection" />
      <Using Namespace="System.Runtime.InteropServices" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[          
            StringBuilder sb = new StringBuilder();
            string assemblyPath = string.Format(@"{0}PInvoke.{1}.dll", AssemblyPath, LibName);
            if(File.Exists(assemblyPath))
            {
              Assembly assembly = Assembly.LoadFrom(assemblyPath);
              if(assembly != null)
              {
                Type libType = assembly.GetType(string.Format("PInvoke.{0}", LibName));
                if(libType != null)
                {
                  foreach (MethodInfo methodInfo in libType.GetMethods().OrderBy(mi => mi.Name))
                  {
                      DllImportAttribute attr = (DllImportAttribute)methodInfo.GetCustomAttributes(typeof(DllImportAttribute), true).FirstOrDefault();
                      if (attr != null)
                      {
                          sb.AppendLine(string.IsNullOrEmpty(attr.EntryPoint) ? methodInfo.Name : attr.EntryPoint);
                      }
                  }
                }
              }            
            }
            string fileName = string.Format(@"{0}{1}.pinvokes.txt", ExportPath, LibName);
            File.WriteAllText(fileName, sb.ToString());
          ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>